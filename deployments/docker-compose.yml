version: "3.8"

services:
  # Main application
  markgo:
    build:
      context: ..
      dockerfile: deployments/Dockerfile
    container_name: markgo-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - ENVIRONMENT=production
      - PORT=3000
      - BASE_URL=http://localhost:3000
      - ARTICLES_PATH=./articles
      - STATIC_PATH=./web/static
      - TEMPLATES_PATH=./web/templates
      - CACHE_TTL=1h
      - CACHE_MAX_SIZE=1000
      - RATE_LIMIT_GENERAL_REQUESTS=100
      - RATE_LIMIT_GENERAL_WINDOW=15m
      - RATE_LIMIT_CONTACT_REQUESTS=5
      - RATE_LIMIT_CONTACT_WINDOW=1h
    env_file:
      - ../.env
    volumes:
      - ../articles:/app/articles:ro
      - ../web:/app/web:ro
      - markgo_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis
    networks:
      - markgo_network

  # Redis for caching (optional enhancement)
  redis:
    image: redis:7-alpine
    container_name: markgo-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - markgo_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
    networks:
      - markgo_network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: markgo-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - markgo_logs:/var/log/nginx
    depends_on:
      - markgo
    networks:
      - markgo_network

  # Prometheus monitoring (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: markgo-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - markgo_prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    networks:
      - markgo_network

  # Grafana dashboard (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: markgo-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - markgo_grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - markgo_network

volumes:
  markgo_logs:
    driver: local
  markgo_redis_data:
    driver: local
  markgo_prometheus_data:
    driver: local
  markgo_grafana_data:
    driver: local

networks:
  markgo_network:
    driver: bridge
