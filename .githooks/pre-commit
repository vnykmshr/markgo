#!/bin/bash
# MarkGo Pre-Commit Hook
# Runs before every commit to ensure code quality

set -e

echo "🔍 Running pre-commit checks..."

# Color codes for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Track if any check fails
FAILED=0

# 1. Security check - detect potential secrets
echo "🔐 Checking for secrets..."
patterns="password\s*[=:]\s*['\"][^'\"]{8,}['\"]|secret\s*[=:]\s*['\"][^'\"]{16,}['\"]|token\s*[=:]\s*['\"][^'\"]{20,}['\"]"
if git diff --cached --name-only | xargs grep -lE "$patterns" 2>/dev/null; then
    echo -e "${RED}✗ Potential secrets detected in commit${NC}"
    echo "Review files and remove sensitive data"
    FAILED=1
fi

# 2. Go formatting check
echo "✨ Checking code formatting..."
UNFORMATTED=$(gofmt -l $(git diff --cached --name-only --diff-filter=ACM | grep '\.go$') 2>/dev/null || true)
if [ -n "$UNFORMATTED" ]; then
    echo -e "${RED}✗ Code formatting issues detected:${NC}"
    echo "$UNFORMATTED"
    echo ""
    echo -e "${YELLOW}Run: gofmt -w .${NC}"
    echo "Or auto-fix: gofmt -w \$(git diff --cached --name-only --diff-filter=ACM | grep '\.go\$')"
    FAILED=1
fi

# 3. Go vet check
echo "🔬 Running go vet..."
GO_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.go$' || true)
if [ -n "$GO_FILES" ]; then
    if ! go vet ./... 2>&1 | grep -v "no Go files"; then
        echo -e "${RED}✗ go vet found issues${NC}"
        FAILED=1
    fi
fi

# 4. Run tests (only if GO files changed)
if [ -n "$GO_FILES" ]; then
    echo "🧪 Running tests..."
    if ! go test ./... -short 2>&1; then
        echo -e "${RED}✗ Tests failed${NC}"
        FAILED=1
    fi
fi

# Final result
if [ $FAILED -eq 1 ]; then
    echo ""
    echo -e "${RED}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo -e "${RED}✗ Pre-commit checks FAILED${NC}"
    echo -e "${RED}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo ""
    echo "Fix the issues above and try again."
    echo ""
    echo "To skip these checks (NOT RECOMMENDED):"
    echo "  git commit --no-verify"
    echo ""
    exit 1
fi

echo ""
echo -e "${GREEN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
echo -e "${GREEN}✓ All pre-commit checks passed!${NC}"
echo -e "${GREEN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
echo ""
exit 0
